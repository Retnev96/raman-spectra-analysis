# -*- coding: utf-8 -*-
"""copy-of-welcome-to-colab.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/gist/Retnev96/154c4b72b86c372fbb3c0a456ff001e9/copy-of-welcome-to-colab.ipynb
"""

import pandas as pd
import matplotlib.pyplot as plt
from numpy.polynomial import polynomial
from scipy.signal import savgol_filter, find_peaks #Import the Savitzky_golay filter function
import numpy as np

df = pd.read_csv('FF40Spot1_1.txt', sep='\t', header=None)
df.columns = ['x', 'y']

#Function for background correction using polynomial fitting
def background_correction(x, y, degree=6):
  p = polynomial.Polynomial.fit(x, y, degree)
  background = p(x)
  return y - background

#Apply background correction
corrected_y = background_correction(df['x'], df['y'])

#Smooth the corrected data using Savitzky_golay filter
smoothed_y = savgol_filter(corrected_y, window_length=51, polyorder=9)  #Adjust the window lenght and polyorder as needed

#Normalize the smoothed data
max_intensity = smoothed_y.max()
normalized_y = smoothed_y / max_intensity

#Calculate the first derivative
dy_dx = np.gradient(normalized_y, df['x'])

#Find peaks using find_peaks (adjust parameters as needed)
peaks, _ = find_peaks(normalized_y, height=0.1, prominence=0.05)

#Plot the origional, corrected and smoothed spectra
plt.figure(figsize=(10, 6))
plt.plot(df['x'], df['y'], label='Raw Data')
plt.plot(df['x'], corrected_y, label='Background Corrected')
plt.plot(df['x'], smoothed_y, label='Smoothed')
plt.xlabel('Ramman Shift (cm$^-1$)')
plt.ylabel('Intensity')
plt.title('Background Corrected and Smoothed Raman Spectra')
plt.grid(True)
plt.legend()
plt.show

#Plot the normalited data with detected peaks and labels
plt.figure(figsize=(10, 6))
plt.plot(df['x'], normalized_y, label='Normalized Data')
plt.plot(df['x'][peaks], normalized_y[peaks], "x", markersize=10, label='Peaks')
# Label the peaks
for peak in peaks:
    plt.text(df['x'][peak], normalized_y[peak], f"{df['x'][peak]:.2f}", ha='center', va='bottom', rotation=90)
plt.xlabel('Ramman Shift (cm$^-1$)')
plt.ylabel('Normalized Intensity')
plt.title('Normalized Raman Spectra')
plt.grid(True)
plt.legend()
plt.show()

print("Peak positions (cm^-1):", df['x'][peaks])